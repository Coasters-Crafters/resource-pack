name: Push Pack

on:
    push:
        paths:
            - "pack.mcmeta"

jobs:
    lint:
        name: Lint Code Base
        runs-on: ubuntu-latest
        steps:
            - name: Checkout Code
              uses: actions/checkout@v2
              with:
                  fetch-depth: 0
            - name: Lint JSON
              run: find . -type f \( -iname \*.json -o -iname \*.mcmeta \) -print0 | while IFS= read -r -d '' line; do echo Validating ${line} && jq empty ${line} || exit 1; done && echo All JSON files are valid
    build:
        name: Compress and Send Pack
        needs: [lint]
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v2
              with:
                  fetch-depth: 0
            - name: Set up S3cmd cli tool
              uses: s3-actions/s3cmd@v1.2.0
              with:
                  provider: aws
                  region: "eu-central-1"
                  access_key: ${{ secrets.S3_ACCESS_KEY }}
                  secret_key: ${{ secrets.S3_SECRET_KEY }}
            - name: Get pack version from pack.mcmeta
              id: packVersion
              run: echo "::set-output name=PACK_VERSION::$(jq -r .pack.version pack.mcmeta)"
            - name: Insert Pack Version
              run: |
                  jq '.pack.version as $version | del(.pack.version) | .pack.description += (" \u00A77(" + $version + ")")' pack.mcmeta > pack.mcmeta.tmp && mv pack.mcmeta.tmp pack.mcmeta
            - name: Minify JSON
              run: find . -type f \( -iname \*.json -o -iname \*.mcmeta \) -print0 | while IFS= read -r -d '' line; do jq -c 'del(.credit, .groups)' ${line} > ${line}.tmp && mv ${line}.tmp ${line}; done
            - name: Install pngquant
              run: sudo apt-get install -y pngquant libpng-dev
            - name: Minify images
              continue-on-error: true
              run: find . -type f -name '*.png' -exec pngquant --strip -f --ext .png {} \; 2>/dev/null
            - name: Compress pack
              run: zip -8 -r -X resourcepack.zip *
            - name: Get Pack Hash
              id: packHash
              run: echo "::set-output name=PACK_HASH::$(shasum *.zip | awk '{ print $1 }')"
            - name: Generate release diff
              run: git fetch --tags --force && git log --pretty=format:"* %s (%h)" ${{ github.event.before }}..${{ github.event.after }} > release_notes.md
            - name: Upload pack to S3
              run: |
                  s3cmd put resourcepack.zip s3://coastercon/resourcepack.zip
            - name: Send Pack to Server
              env:
                  PACK_AUTH: ${{ secrets.PACK_AUTH }}
                  PACK_VERSION: ${{ steps.packVersion.outputs.PACK_VERSION }}
                  PACK_HASH: ${{ steps.packHash.outputs.PACK_HASH }}
              run: |
                  curl -X POST https://internal.coastersandcrafters.com/api/v1/resource-pack/update -H "Authorization: ${PACK_AUTH}" -H "Content-Type: application/json" -d "{\"url\":\"https://cdn.coastersandcrafters.com/resourcepack.zip?hash=${PACK_HASH}\",\"hash\":\"${PACK_HASH}\"}"

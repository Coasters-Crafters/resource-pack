name: Push Pack

on:
    push:
        paths:
            - "pack.mcmeta"

jobs:
    lint:
        name: Lint Code Base
        runs-on: ubuntu-latest
        steps:
            - name: Checkout Code
              uses: actions/checkout@v2
              with:
                  fetch-depth: 0
            - name: Lint Code Base
              uses: github/super-linter@v4
              env:
                  VALIDATE_ALL_CODEBASE: false
                  VALIDATE_YAML: true
                  VALIDATE_JSON: true
                  DEFAULT_BRANCH: main
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    build:
        name: Compress and Send Pack
        needs: [lint]
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v2
              with:
                  fetch-depth: 0
            - name: Get pack version from pack.mcmeta
              id: lookupPackVersion
              run: echo "::set-output name=PACK_VERSION::$(jq -r .pack.version pack.mcmeta)"
            - name: Insert Pack Version
              run: |
                  jq '.pack.version as $version | del(.pack.version) | .pack.description += (" \u00A77(" + $version + ")")' pack.mcmeta > pack.mcmeta.tmp && mv pack.mcmeta.tmp pack.mcmeta
            - name: Minify JSON
              run: find . -type f \( -iname \*.json -o -iname \*.mcmeta \) -print0 | while IFS= read -r -d '' line; do jq -c 'del(.credit, .groups)' ${line} > ${line}.tmp && mv ${line}.tmp ${line}; done
            - name: Install pngquant
              run: sudo apt-get install -y pngquant libpng-dev
            - name: Minify images
              continue-on-error: true
              run: find . -type f -name '*.png' -exec pngquant --strip -f --ext .png {} \; 2>/dev/null
            - name: Compress pack
              run: zip -8 -r -X  CoasterConPack.zip *
            - name: Get Pack Hash
              run: echo "::set-output name=PACK_HASH::$(shasum latest.zip | awk '{ print $1 }')"
            - name: Generate release diff
              run: git fetch --tags --force && git log --pretty=format:"* %s (%h)" ${{ github.event.before }}..${{ github.event.after }} > release_notes.md
            - name: Create release
              uses: ncipollo/release-action@v1
              with:
                  artifacts: CoasterConPack.zip
                  allowUpdates: true
                  bodyFile: "release_notes.md"
                  draft: false
                  prerelease: false
                  tag: ${{ steps.lookupPackVersion.outputs.PACK_VERSION }}
                  token: ${{ secrets.GITHUB_TOKEN }}
            - name: Update pack on server
              env:
                  PTERODACTYL_TOKEN: ${{ secrets.PTERODACTYL_TOKEN }}
              run: |
                  curl "https://panel.expeditionisles.net/api/client/servers/e7dee6d1/command" -H 'Accept: application/json' -H 'Content-Type: application/json' -H "Authorization: Bearer ${PTERODACTYL_TOKEN}" -X POST -d '{"command": "con updatepack https://github.com/Coasters-Crafters/resource-pack/releases/latest/download/CoasterConPack.zip ${PACK_HASH}"}'
